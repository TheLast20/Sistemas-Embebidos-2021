// Generated by Proteus Visual Designer for Arduino

// Peripheral Configuration Code (Do Not Edit)
//---CONFIG_BEGIN---
#pragma GCC push_options
#pragma GCC optimize ("Os")

#include <core.h> // Required by cpu
#include <cpu.h>
#include <bridge.h> // Required by ESP1:MQTT
#include <pubsubclient.h> // Required by ESP1:MQTT
#include <mqtt.h>

#include <SoftwareSerial.h> 

#pragma GCC pop_options

// Peripheral Constructors
CPU &cpu = Cpu;
Mqtt &ESP1_MQTT = Mqtt::instance;

//Second Serial
#define RX 8
#define TX 9

SoftwareSerial mySerial(RX,TX); //Pines de Transmisión y Recepción

//MQTT Broker -----------------------------------------------------------------------------------
const char* clientID = ""; //Identificador que toma el cliente (nuestro Arduino) Ejemplos: "Arduino", "Sensor" 

const char* mqtt_server = ""; //Ejemplos: "ioticos.org" ,"192.100.25.24", "localhost"
int port  =1883;
const char* mqtt_user = ""; //Usuario
const char* mqtt_pass = ""; //Contraseña

//Topicos
String topic = ""; //Ejemplos: "Casa", "Luz" , "5npIBbWJJYbAfPr"

//Funciones callbacks
void ESP1_MQTT_ConnectCallback() ;
void ESP1_MQTT_MessageCallback();


void setup(){
	//MQTT BEGIN
	ESP1_MQTT.begin (clientID, mqtt_server, port, mqtt_user, mqtt_pass);

	//Definimos las funciones callbacks
	ESP1_MQTT.attachConnectHandler(&ESP1_MQTT_ConnectCallback);
	ESP1_MQTT.attachMessageHandler(&ESP1_MQTT_MessageCallback);

	//Nos conectamos
	ESP1_MQTT.connect(true);

	mySerial.begin(9600);    //Inicializar Monitor Serial 9600 bps
}

void loop(){
	ESP1_MQTT.poll ();  //Se encarga de verificar si algun mensaje se ha recibido
}


void ESP1_MQTT_ConnectCallback() {
	//Funcion se activa cuando se conecta al servidor MQTT
	ESP1_MQTT.subscribe(topic,0);
}

void ESP1_MQTT_MessageCallback() {
	//Funcion se activa cuando se recibe un mensaje en un topico subscrito
	String mqttTopic=ESP1_MQTT.readTopic(); //Se almacena el Topico del mensaje recibido 
	String mqttMessage=ESP1_MQTT.readMessage();  // Se almacena el mensaje recibido

	String text = "Topic: "+mqttTopic+" Mensaje: "+mqttMessage;

	//Mostramos el resultado por mySerial
	mySerial.println(text);

	int valor = toInt(mqttMessage);
	analogWrite(6,valor);

}
